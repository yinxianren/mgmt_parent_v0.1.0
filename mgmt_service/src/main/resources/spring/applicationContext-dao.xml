<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/tx
       http://www.springframework.org/schema/tx/spring-tx.xsd">

    <!-- 数据源1（读） -->
    <bean id="dataSource1" class="com.alibaba.druid.pool.DruidDataSource" destroy-method="close">
        <property name="url" value="${jdbc.connectionURL1}"/>
        <property name="username" value="${jdbc.userID1}"/>
        <property name="password" value="${jdbc.password1}"/>
        <property name="driverClassName" value="${jdbc.driverClass}"/>
        <property name="maxActive" value="${jdbc.maxActive}"/>
        <property name="minIdle" value="${jdbc.minIdle}"/>
    </bean>
    <!-- 数据源2（写） -->
    <bean id="dataSource2" class="com.alibaba.druid.pool.DruidDataSource" destroy-method="close">
        <property name="url" value="${jdbc.connectionURL2}"/>
        <property name="username" value="${jdbc.userID2}"/>
        <property name="password" value="${jdbc.password2}"/>
        <property name="driverClassName" value="${jdbc.driverClass}"/>
        <property name="maxActive" value="${jdbc.maxActive}"/>
        <property name="minIdle" value="${jdbc.minIdle}"/>
    </bean>
    <!-- 动态数据源bean -->
    <!--    <bean id="dynamicDataSource" class="com.rxh.db.DynamicDataSource">-->
    <!--      <property name="targetDataSources">-->
    <!--            <map key-type="java.lang.String">-->
    <!--                <entry key="ds1" value-ref="dataSource1"/>-->
    <!--                <entry key="ds2" value-ref="dataSource2"/>-->
    <!--            </map>-->
    <!--        </property>-->
    <!--    </bean>-->

    <!--  ****************************************************************************************** -->

    <!-- 配置事务管理 -->
    <bean name="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource1"></property>
    </bean>

    <tx:annotation-driven  transaction-manager="transactionManager" />
    <!--    <tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="true"/>-->

    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="configLocation" value="classpath:mybatis/mybatis-config.xml"/>
        <property name="dataSource" ref="dataSource1"/>
    </bean>


<!--    <bean id="sqlSessionFactory" class="com.baomidou.mybatisplus.extension.spring.MybatisSqlSessionFactoryBean">-->
<!--        <property name="configLocation" value="classpath:mybatis/mybatis-config.xml"/>-->
<!--        <property name="dataSource" ref="dataSource1"/>-->
<!--    </bean>-->
    <!--  ****************************************************************************************** -->


    <!-- 配置SqlSessionFactory -->
    <!--    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">-->
    <!--        <property name="configLocation" value="classpath:mybatis/mybatis-config.xml"/>-->
    <!--        <property name="dataSource" ref="dynamicDataSource"/>-->
    <!--    </bean>-->

    <!-- 配置扫描包，加载mapper对象 -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.rxh.mapper"/>
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
<!--        <property name="basePackage" value="com.baomidou.mybatisplus.samples.quickstart.mapper"/>-->
    </bean>

</beans>